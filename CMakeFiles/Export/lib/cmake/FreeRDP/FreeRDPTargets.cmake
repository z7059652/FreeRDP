# Generated by CMake 3.4.0-rc2

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget freerdp audin-client audin-client-winmm cliprdr-client disp-client drdynvc-client drive-client echo-client encomsp-client printer-client rail-client rdpdr-client rdpei-client rdpgfx-client rdpsnd-client rdpsnd-client-winmm remdesk-client smartcard-client freerdp-client wfreerdp-client)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)

# Create imported target freerdp
add_library(freerdp SHARED IMPORTED)

# Create imported target audin-client
add_library(audin-client STATIC IMPORTED)

# Create imported target audin-client-winmm
add_library(audin-client-winmm STATIC IMPORTED)

# Create imported target cliprdr-client
add_library(cliprdr-client STATIC IMPORTED)

# Create imported target disp-client
add_library(disp-client STATIC IMPORTED)

# Create imported target drdynvc-client
add_library(drdynvc-client STATIC IMPORTED)

# Create imported target drive-client
add_library(drive-client STATIC IMPORTED)

# Create imported target echo-client
add_library(echo-client STATIC IMPORTED)

# Create imported target encomsp-client
add_library(encomsp-client STATIC IMPORTED)

# Create imported target printer-client
add_library(printer-client STATIC IMPORTED)

# Create imported target rail-client
add_library(rail-client STATIC IMPORTED)

# Create imported target rdpdr-client
add_library(rdpdr-client STATIC IMPORTED)

# Create imported target rdpei-client
add_library(rdpei-client STATIC IMPORTED)

# Create imported target rdpgfx-client
add_library(rdpgfx-client STATIC IMPORTED)

# Create imported target rdpsnd-client
add_library(rdpsnd-client STATIC IMPORTED)

# Create imported target rdpsnd-client-winmm
add_library(rdpsnd-client-winmm STATIC IMPORTED)

# Create imported target remdesk-client
add_library(remdesk-client STATIC IMPORTED)

# Create imported target smartcard-client
add_library(smartcard-client STATIC IMPORTED)

# Create imported target freerdp-client
add_library(freerdp-client SHARED IMPORTED)

set_target_properties(freerdp-client PROPERTIES
  INTERFACE_LINK_LIBRARIES "audin-client;disp-client;echo-client;rdpei-client;rdpgfx-client;cliprdr-client;drdynvc-client;encomsp-client;rail-client;rdpdr-client;rdpsnd-client;remdesk-client;drive-client;printer-client;smartcard-client;audin-client-winmm;rdpsnd-client-winmm;freerdp;winpr;C:/OpenSSL-Win64/lib/VC/ssleay32MD.lib;C:/OpenSSL-Win64/lib/VC/libeay32MD.lib;winpr;freerdp"
)

# Create imported target wfreerdp-client
add_library(wfreerdp-client SHARED IMPORTED)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/FreeRDPTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other 
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "winpr" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
